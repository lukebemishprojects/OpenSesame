plugins {
    id 'opensesame.conventions'
}

java.withSourcesJar()
java.withJavadocJar()

sourceSets {
    java22 {}
}

tasks.named('compileJava22Java', JavaCompile) {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

tasks.named('processResources', ProcessResources) {
    from(sourceSets.java22.output) {
        into 'META-INF/versions/22'
    }
    dependsOn sourceSets.java22.output
}

tasks.named('jar', Jar) {
    manifest {
        attributes([
                'Multi-Release': 'true'
        ])
    }
}

configurations {
    java22CompileClasspath.extendsFrom compileClasspath
}

dependencies {
    implementation libs.asm.core
    implementation libs.asm.commons
    
    java22CompileOnly sourceSets.main.output.classesDirs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                openSesameConvention.pomShared(it, 'Core')
                description = 'Core annotations and runtime metafactory used for OpenSesame, a tool for typesafe access to normally inaccessible members'
            }
        }
    }
}