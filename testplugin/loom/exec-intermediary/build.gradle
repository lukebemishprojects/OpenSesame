import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'java'
    id 'fabric-loom'
}

loom {
    knownIndyBsms.add 'dev/lukebemish/opensesame/runtime/OpeningMetafactory'
    runs.removeAll()
}

group='dev.lukebemish.opensesame'

java.toolchain.languageVersion.set(JavaLanguageVersion.of(17))

configurations {
    testClasses {
        canBeResolved = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft 'com.mojang:minecraft:1.20.4'
    mappings loom.layered {}

    testClasses project(path: ':loom', configuration: 'testClasses')

    modImplementation libs.fabric.loader
}

tasks.register('remapTestClasses', RemapJarTask).configure {
    dependsOn configurations.testClasses
    input.set configurations.testClasses.singleFile
    targetNamespace.set 'named'
    sourceNamespace.set 'intermediary'
    archiveClassifier.set 'remapped'
}

tasks.register('unpackRemappedJar', Copy).configure {
    dependsOn tasks.remapTestClasses
    from zipTree(tasks.remapTestClasses.archiveFile)
    into layout.buildDirectory.dir('unpacked')
}

testing {
    suites.test {
        targets.configureEach {
            testTask.configure {
                test {
                    useJUnitPlatform()

                    testLogging {
                        showStandardStreams = true
                        exceptionFormat = 'full'
                        showCauses = true
                        showStackTraces = true
                        events = ['passed', 'failed', 'skipped']
                    }

                    testClassesDirs.from tasks.unpackRemappedJar.outputs
                    classpath.from tasks.unpackRemappedJar.outputs

                    enableAssertions = true
                    systemProperty('junit.platform.reporting.open.xml.enabled', 'true')
                    systemProperty('junit.platform.reporting.output.dir', 'build/reports/tests')
                    systemProperty('opensesame.transformer.name', 'gradle-loom, on intermediary')
                    reports {
                        junitXml.required = false
                        html.required = false
                    }
                }
            }
        }

        dependencies {
            implementation 'dev.lukebemish.opensesame:testtargets'
            implementation 'dev.lukebemish.opensesame:opensesame-core'
            implementation libs.asm.core
            runtimeOnly libs.bundles.junit.runtime
            implementation libs.bundles.junit.implementation
            runtimeOnly 'dev.lukebemish.opensesame:opensesame-fabric'
        }
    }
}
